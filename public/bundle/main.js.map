{"version":3,"file":"main.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../node_modules/@sveltech/routify/runtime/helpers.js","../../node_modules/@sveltech/routify/runtime/store.js","../../node_modules/@sveltech/routify/tmp/config.js","../../node_modules/@sveltech/routify/runtime/utils.js","../../node_modules/@sveltech/routify/runtime/Route.svelte","../../node_modules/@sveltech/routify/runtime/navigator.js","../../node_modules/@sveltech/routify/runtime/Router.svelte","../../node_modules/@sveltech/routify/runtime/buildRoutes.js","../../src/pages/about.svelte","../../src/stores/store.js","../../src/lib/helpers.js","../../src/components/Board.svelte","../../src/pages/index.svelte","../../node_modules/@sveltech/routify/tmp/routes.js","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if (typeof $$scope.dirty === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nconst seen_callbacks = new Set();\nfunction flush() {\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.18.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_keys, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { getContext, tick } from 'svelte'\r\nimport { derived } from 'svelte/store'\r\n\r\nexport const context = {\r\n  subscribe(listener) {\r\n    return getContext('routify').subscribe(listener)\r\n  },\r\n}\r\n\r\nexport const ready = {\r\n  subscribe(listener) {\r\n    window.routify.stopAutoReady = true\r\n    return listener(async () => {\r\n      await tick()\r\n      dispatchEvent(new CustomEvent('app-loaded'))\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const beforeUrlChange = {\r\n  _hooks: [],\r\n  subscribe(listener) {\r\n    const hooks = this._hooks\r\n    const index = hooks.length\r\n    listener(callback => { hooks[index] = callback })\r\n    return () => delete hooks[index]\r\n  }\r\n}\r\n\r\n/**\r\n * We have to grab params and leftover from the context and not directly from the store.\r\n * Otherwise the context is updated before the component is destroyed.\r\n **/\r\nexport const params = {\r\n  subscribe(listener) {\r\n    return derived(\r\n      getContext('routify'),\r\n      context => context.route.params\r\n    ).subscribe(listener)\r\n  },\r\n}\r\n\r\nexport const leftover = {\r\n  subscribe(listener) {\r\n    return derived(\r\n      getContext('routify'),\r\n      context => context.route.leftover\r\n    ).subscribe(listener)\r\n  },\r\n}\r\n\r\n/** HELPERS */\r\nexport const url = {\r\n  subscribe(listener) {\r\n    return derived(getContext('routify'), context => context.url).subscribe(\r\n      listener\r\n    )\r\n  },\r\n}\r\n\r\nexport const goto = {\r\n  subscribe(listener) {\r\n    return derived(getContext('routify'), context => context.goto).subscribe(\r\n      listener\r\n    )\r\n  },\r\n}\r\n\r\nexport const isActive = {\r\n  subscribe(listener) {\r\n    return derived(\r\n      getContext('routify'),\r\n      context => context.isActive\r\n    ).subscribe(listener)\r\n  },\r\n}\r\n\r\nexport function _isActive(url, route) {\r\n  return function (path, keepIndex = true) {\r\n    path = url(path, null, keepIndex)\r\n    const currentPath = url(route.path, null, keepIndex)\r\n    const re = new RegExp('^' + path)\r\n    return currentPath.match(re)\r\n  }\r\n}\r\n\r\nexport function _goto(url) {\r\n  return function goto(path, params, _static, shallow) {\r\n    const href = url(path, params)\r\n    if (!_static) history.pushState({}, null, href)\r\n    else getContext('routifyupdatepage')(href, shallow)\r\n  }\r\n}\r\n\r\nexport function _url(context, route, routes) {\r\n  return function url(path, params, preserveIndex) {\r\n    path = path || './'\r\n\r\n    if (!preserveIndex) path = path.replace(/index$/, '')\r\n\r\n    if (path.match(/^\\.\\.?\\//)) {\r\n      //RELATIVE PATH\r\n      // get component's dir\r\n      let dir = context.path\r\n      // traverse through parents if needed\r\n      const traverse = path.match(/\\.\\.\\//g) || []\r\n      traverse.forEach(() => {\r\n        dir = dir.replace(/\\/[^\\/]+\\/?$/, '')\r\n      })\r\n\r\n      // strip leading periods and slashes\r\n      path = path.replace(/^[\\.\\/]+/, '')\r\n      dir = dir.replace(/\\/$/, '') + '/'\r\n      path = dir + path\r\n    } else if (path.match(/^\\//)) {\r\n      // ABSOLUTE PATH\r\n    } else {\r\n      // NAMED PATH\r\n      const matchingRoute = routes.find(route => route.meta.name === path)\r\n      if(matchingRoute) path = matchingRoute.shortPath\r\n    }\r\n\r\n    params = Object.assign({}, route.params, context.params, params)\r\n    for (const [key, value] of Object.entries(params)) {\r\n      path = path.replace(`:${key}`, value)\r\n    }\r\n    return path\r\n  }\r\n}\r\n\r\n\r\nexport function getConcestor(route1, route2) {\r\n  // The route is the last piece of layout\r\n  const layouts1 = [...route1.layouts, route1]\r\n  const layouts2 = [...route2.layouts, route2]\r\n\r\n  let concestor = false\r\n  let children = [layouts1[0], layouts2[0]]\r\n\r\n  // iterate through the layouts starting from the root\r\n  layouts1.forEach((layout1, i) => {\r\n    const layout2 = layouts2[i]\r\n    if (layout1 === layout2) {\r\n      concestor = layout1\r\n      // if this is a concestor, the next iteration would be children\r\n      children = [layouts1[i + 1], layouts2[i + 1]]\r\n    }\r\n  })\r\n  return [concestor, ...children]\r\n}\r\n\r\n\r\n\r\n/**\r\n * Get index difference between two paths\r\n *\r\n * @export\r\n * @param {array} paths\r\n * @param {object} newPath\r\n * @param {object} oldPath\r\n * @returns In\r\n */\r\nexport function getDirection(paths, newPath, oldPath) {\r\n  const newIndex = paths.findIndex(path => newPath.path.startsWith(path))\r\n  const oldIndex = paths.findIndex(path => oldPath.path.startsWith(path))\r\n  return newIndex - oldIndex\r\n}\r\n\r\n","import { writable } from 'svelte/store'\r\n\r\nexport const route = writable({})\r\nexport const routes = writable([])","export default {\n  \"pages\": \"/Users/adrianjager/dev/jig-tac-to/src/pages\",\n  \"sourceDir\": \"public\",\n  \"routifyDir\": \"node_modules/@sveltech/routify/tmp\",\n  \"ignore\": [],\n  \"unknownPropWarnings\": true,\n  \"dynamicImports\": false,\n  \"singleBuild\": false,\n  \"scroll\": false,\n  \"extensions\": [\n    \"html\",\n    \"svelte\",\n    \"md\"\n  ],\n  \"distDir\": \"dist\",\n  \"noPrerender\": false,\n  \"unusedPropWarnings\": true\n}","import config from '../tmp/config'\r\nconst MATCH_PARAM = RegExp(/\\:[^\\/\\()]+/g)\r\n\r\nexport function handleScroll(element) {\r\n  scrollAncestorsToTop(element)\r\n  handleHash()\r\n}\r\n\r\n\r\nexport function handleHash() {\r\n  const { scroll } = config\r\n  const options = ['auto', 'smooth', 'smooth']\r\n  const { hash } = window.location\r\n  if (scroll && hash) {\r\n    const behavior = options.includes(scroll) && scroll || 'auto'\r\n    const el = document.querySelector(hash)\r\n    if (hash && el) el.scrollIntoView({ behavior })\r\n  }\r\n}\r\n\r\n\r\nexport function scrollAncestorsToTop(element) {\r\n  if (element && element.scrollTo && element.dataset.routify !== 'scroll-lock') {\r\n    element.scrollTo(0, 0)\r\n    scrollAncestorsToTop(element.parentElement)\r\n  }\r\n}\r\n\r\nexport const pathToRegex = (str, recursive) => {\r\n  const suffix = recursive ? '' : '/?$' //fallbacks should match recursively\r\n  str = str.replace(/\\/_fallback?$/, '(/|$)')\r\n  str = str.replace(/\\/index$/, '(/index)?') //index files should be matched even if not present in url\r\n  str = '^' + str.replace(MATCH_PARAM, '([^/]+)') + suffix\r\n  return str\r\n}\r\n\r\nexport const pathToParams = string => {\r\n  const matches = string.match(MATCH_PARAM)\r\n  if (matches) return matches.map(str => str.substr(1, str.length - 2))\r\n}\r\n\r\nexport const pathToRank = ({ path }) => {\r\n  return path\r\n    .split('/').filter(Boolean)\r\n    .map(str => (str === '_fallback' ? 'A' : str.startsWith(':') ? 'B' : 'C'))\r\n    .join('')\r\n}\r\n","<script>\r\n  import { getContext, setContext, onDestroy, onMount, tick } from 'svelte'\r\n  import { writable } from 'svelte/store'\r\n  import { _url, _goto, _isActive } from './helpers.js'\r\n  import { route, routes } from './store'\r\n  import { handleScroll } from './utils'\r\n\r\n  export let layouts = [],\r\n    scoped = {},\r\n    Decorator = undefined,\r\n    _passthroughDecorator = undefined\r\n  let scopeToChild,\r\n    props = {},\r\n    parentElement,\r\n    propFromParam = {},\r\n    key = 0,\r\n    scopedSync = {}\r\n\r\n  const context = writable({})\r\n  setContext('routify', context)\r\n\r\n  $: if (Decorator) {\r\n    layouts = [\r\n      { component: () => Decorator, path: layouts[0].path + '__decorator' },\r\n      ...layouts,\r\n    ]\r\n  }\r\n\r\n  $: [layout, ...remainingLayouts] = layouts\r\n  $: if (layout && layout.param) propFromParam = layout.param\r\n  $: layoutIsUpdated = !_lastLayout || _lastLayout.path !== layout.path\r\n\r\n  function setParent(el) {\r\n    parentElement = el.parentElement\r\n  }\r\n\r\n  let _lastLayout, _Component\r\n  function onComponentLoaded() {\r\n    _lastLayout = layout\r\n    if (layoutIsUpdated) key++\r\n    if (remainingLayouts.length === 0) onLastComponentLoaded()\r\n    const url = _url(layout, $route, $routes)\r\n    context.set({\r\n      route: $route,\r\n      path: layout.path,\r\n      url,\r\n      goto: _goto(url),\r\n      isActive: _isActive(url, $route),\r\n    })\r\n  }\r\n\r\n  let component\r\n  function setComponent(layout) {\r\n    if (layoutIsUpdated) _Component = layout.component()\r\n    if (_Component.then)\r\n      _Component.then(res => {\r\n        component = res\r\n        scopedSync = { ...scoped }\r\n        onComponentLoaded()\r\n      })\r\n    else {\r\n      component = _Component\r\n      scopedSync = { ...scoped }\r\n      onComponentLoaded()\r\n    }\r\n  }\r\n  $: setComponent(layout)\r\n\r\n  async function onLastComponentLoaded() {\r\n    await tick()\r\n    handleScroll(parentElement)\r\n    if (!window.routify.stopAutoReady) {\r\n      // Let every know the last child has rendered\r\n      dispatchEvent(new CustomEvent('app-loaded'))\r\n    }\r\n  }\r\n</script>\r\n\r\n{#if component}\r\n  {#each [0] as dummy (key)}\r\n    <svelte:component\r\n      this={component}\r\n      let:scoped={scopeToChild}\r\n      let:decorator\r\n      {scoped}\r\n      {scopedSync}\r\n      {...propFromParam}>\r\n      {#if remainingLayouts.length}\r\n        <svelte:self\r\n          layouts={[...remainingLayouts]}\r\n          Decorator={typeof decorator !== 'undefined' ? decorator : _passthroughDecorator}\r\n          _passthroughDecorator={Decorator}\r\n          scoped={{ ...scoped, ...scopeToChild }} />\r\n      {/if}\r\n    </svelte:component>\r\n  {/each}\r\n{/if}\r\n\r\n<!-- get the parent element for scroll functionality -->\r\n{#if !parentElement}\r\n  <span use:setParent />\r\n{/if}\r\n","import { route as routeStore } from './store'\r\nimport { get } from 'svelte/store'\r\nimport { beforeUrlChange } from './helpers'\r\nconst { _hooks } = beforeUrlChange\r\n\r\nexport function init(routes, callback) {\r\n  let prevRoute = false\r\n\r\n  function updatePage(url, shallow) {\r\n\r\n    const currentUrl = window.location.pathname\r\n    url = url || currentUrl\r\n\r\n    const route = urlToRoute(url, routes)\r\n    const currentRoute = shallow && urlToRoute(currentUrl, routes)\r\n    const contextRoute = currentRoute || route\r\n    const layouts = [...contextRoute.layouts, route]\r\n    delete prevRoute.prev\r\n    route.prev = prevRoute\r\n    prevRoute = route\r\n\r\n    //set the route in the store\r\n    routeStore.set(route)\r\n\r\n    //run callback in Router.svelte\r\n    callback(layouts)\r\n  }\r\n\r\n  createEventListeners(updatePage)\r\n\r\n  return updatePage\r\n}\r\n\r\n/**\r\n * svelte:window events doesn't work on refresh\r\n * @param {Function} updatePage \r\n */\r\nfunction createEventListeners(updatePage) {\r\n  // history.*state\r\n  ;['pushState', 'replaceState'].forEach(eventName => {\r\n    const fn = history[eventName]\r\n    history[eventName] = async function (state, title, url) {\r\n      const event = new Event(eventName.toLowerCase())\r\n      Object.assign(event, { state, title, url })\r\n\r\n      if (await runHooksBeforeUrlChange(event)) {\r\n        fn.apply(this, [state, title, url])\r\n        return dispatchEvent(event)\r\n      }\r\n    }\r\n  })\r\n\r\n  // click\r\n  addEventListener('click', handleClick)\r\n    ;['pushstate', 'popstate', 'replacestate'].forEach(e =>\r\n      addEventListener(e, () => updatePage())\r\n    )\r\n}\r\n\r\nfunction handleClick(event) {\r\n  const el = event.target.closest('a')\r\n  const href = el && el.getAttribute('href')\r\n\r\n  if (\r\n    event.ctrlKey ||\r\n    event.metaKey ||\r\n    event.altKey ||\r\n    event.shiftKey ||\r\n    event.button ||\r\n    event.defaultPrevented\r\n  )\r\n    return\r\n  if (!href || el.target || el.host !== location.host) return\r\n\r\n  event.preventDefault()\r\n  history.pushState({}, '', href)\r\n}\r\n\r\nasync function runHooksBeforeUrlChange(event) {\r\n  const route = get(routeStore)\r\n  for (const hook of _hooks.filter(Boolean)) {\r\n    // return false if the hook returns false\r\n    if (await !hook(event, route)) return false\r\n  }\r\n  return true\r\n}\r\n\r\n\r\nfunction urlToRoute(url, routes) {\r\n  const mockUrl = (new URL(location)).searchParams.get('__mock-url');\r\n  url = mockUrl || url\r\n\r\n  const route = routes.find(route => url.match(route.regex))\r\n  if (!route)\r\n    throw new Error(\r\n      `Route could not be found. Make sure ${url}.svelte or ${url}/index.svelte exists. A restart may be required.`\r\n    )\r\n\r\n  if (route.paramKeys) {\r\n    const layouts = layoutByPos(route.layouts)\r\n    const fragments = url.split('/').filter(Boolean)\r\n    const routeProps = getRouteProps(route.path)\r\n\r\n    routeProps.forEach((prop, i) => {\r\n      if (prop) {\r\n        route.params[prop] = fragments[i]\r\n        if (layouts[i]) layouts[i].param = { [prop]: fragments[i] }\r\n        else route.param = { [prop]: fragments[i] }\r\n      }\r\n    })\r\n  }\r\n\r\n  route.leftover = url.replace(new RegExp(route.regex), '')\r\n\r\n  return route\r\n}\r\n\r\nfunction layoutByPos(layouts) {\r\n  const arr = []\r\n  layouts.forEach(layout => {\r\n    arr[layout.path.split('/').filter(Boolean).length - 1] = layout\r\n  })\r\n  return arr\r\n}\r\n\r\nfunction getRouteProps(url) {\r\n  return url\r\n    .split('/')\r\n    .filter(Boolean)\r\n    .map(f => f.match(/\\:(.+)/))\r\n    .map(f => f && f[1])\r\n}\r\n\r\n\r\n","<script>\r\n  import { setContext } from 'svelte'\r\n  import Route from './Route.svelte'\r\n  import { init } from './navigator.js'\r\n  import { routes as routesStore } from './store.js'\r\n\r\n  window.routify = {}\r\n\r\n  export let routes\r\n  routesStore.set(routes)\r\n  let layouts = []\r\n\r\n  const callback = res => (layouts = res)\r\n  $: updatePage = init($routesStore, callback)\r\n  $: updatePage()\r\n  $: setContext('routifyupdatepage', updatePage)\r\n</script>\r\n\r\n<Route {layouts} />\r\n","import { pathToParams, pathToRank, pathToRegex } from './utils'\r\n\r\nexport function buildRoutes(routes, routeKeys) {\r\n  return (\r\n    routes\r\n      // .map(sr => deserializeRoute(sr, routeKeys))\r\n      .map(decorateRoute)\r\n      .sort((c, p) => (c.ranking >= p.ranking ? -1 : 1))\r\n  )\r\n}\r\n\r\nconst decorateRoute = function(route) {\r\n  route.paramKeys = pathToParams(route.path)\r\n  route.regex = pathToRegex(route.path, route.isFallback)\r\n  route.name = route.path.match(/[^\\/]*\\/[^\\/]+$/)[0].replace(/[^\\w\\/]/g, '') //last dir and name, then replace all but \\w and /\r\n  route.ranking = pathToRank(route)\r\n  route.layouts.map(l => {\r\n    l.param = {}\r\n    return l\r\n  })\r\n  route.params = {}\r\n\r\n  return route\r\n}\r\n\r\nexport function deserializeRoute(route, keys) {\r\n  const obj = {}\r\n  route.forEach((v, i) => {\r\n    obj[keys[i]] = v\r\n  })\r\n  return obj\r\n}\r\n","<script>\n  let counter = 1;\n</script>\n\n<style>\n  button {\n    background-color: red;\n  }\n</style>\n\nhello aksjhdkjlasa::aftera aslkdjhlakjhslkdhja{counter}\n<button\n  on:click={() => {\n    counter++;\n  }}>\n  hallo\n</button>\n","import { writable, derived } from \"svelte/store\";\nimport { calculateWinner } from \"../lib/helpers.js\";\n\nclass History {\n  constructor() {\n    this.history = new Array();\n    this.current = -1;\n  }\n\n  currentState() {\n    return this.history[this.current];\n  }\n\n  push(state) {\n    // remove all redo states\n    if (this.canRedo()) this.history.splice(this.current + 1);\n\n    // add a new state\n    this.current++;\n    this.history.push(state);\n  }\n\n  canUndo() {\n    return this.current > 0;\n  }\n\n  canRedo() {\n    return this.current < this.history.length - 1;\n  }\n\n  undo() {\n    if (this.canUndo()) this.current--;\n  }\n\n  redo() {\n    if (this.canRedo()) this.current++;\n  }\n\n  setCurrent(current) {\n    if (current >= 0 && current < this.history.length) this.current = current;\n  }\n}\n\nfunction createHistory() {\n  const { subscribe, set, update } = writable(new History());\n\n  return {\n    subscribe,\n    push: state =>\n      update(h => {\n        h.push(state);\n        console.log(h);\n        return h;\n      }),\n    undo: () =>\n      update(h => {\n        h.undo();\n        return h;\n      }),\n    redo: () =>\n      update(h => {\n        h.redo();\n        return h;\n      }),\n    setCurrent: current =>\n      update(h => {\n        h.setCurrent(current);\n        return h;\n      })\n  };\n}\n\nexport const history = createHistory();\n\nexport const status = derived(history, $history => {\n  if ($history.currentState()) {\n    if (calculateWinner($history.currentState().squares)) return 1;\n    else if ($history.current == 9) return 2;\n  }\n  return 0;\n});\n","export function calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n","<script>\n  import { onMount } from \"svelte\";\n  import { history, status } from \"../stores/store.js\";\n\n  export let width = 3;\n  export let height = 3;\n  export let cellWidth = 34;\n  export let cellHeight = 34;\n  export let colorStroke = \"#999\";\n  let boardWidth = 1 + width * cellWidth;\n  let boardHeight = 1 + height * cellHeight;\n  let canvas;\n\n  let state = {\n    squares: Array(9).fill(\"\"),\n    xIsNext: true\n  };\n\n  history.push(state);\n\n  function handleClick(event) {\n    let x = Math.trunc((event.offsetX + 0.5) / cellWidth);\n    let y = Math.trunc((event.offsetY + 0.5) / cellHeight);\n    let i = y * width + x;\n\n    const state = $history.currentState();\n    if ($status == 1 || state.squares[i]) return;\n\n    const squares = state.squares.slice();\n    squares[i] = state.xIsNext ? \"X\" : \"O\";\n    let newState = {\n      squares: squares,\n      xIsNext: !state.xIsNext\n    };\n    history.push(newState);\n  }\n\n  onMount(() => {\n    const ctx = canvas.getContext(\"2d\");\n\n    function draw() {\n      ctx.clearRect(0, 0, boardWidth, boardHeight);\n\n      // draw board\n      ctx.beginPath();\n\n      // vertical lines\n      for (let x = 0; x <= boardWidth; x += cellWidth) {\n        ctx.moveTo(0.5 + x, 0);\n        ctx.lineTo(0.5 + x, boardHeight);\n      }\n\n      // horizontal lines\n      for (let y = 0; y <= boardHeight; y += cellHeight) {\n        ctx.moveTo(0, 0.5 + y);\n        ctx.lineTo(boardWidth, 0.5 + y);\n      }\n\n      // draw the board\n      ctx.strokeStyle = colorStroke;\n      ctx.stroke();\n\n      ctx.closePath();\n\n      // draw cells\n      ctx.beginPath();\n\n      ctx.font = \"bold 22px Century Gothic\";\n      let d = 8;\n      let k = 0;\n      for (let i = 0; i < height; i += 1) {\n        for (let j = 0; j < width; j += 1) {\n          ctx.fillText(\n            $history.currentState().squares[k],\n            j * cellWidth + d + 1,\n            (i + 1) * cellHeight - d\n          );\n          k++;\n        }\n      }\n\n      ctx.closePath();\n\n      requestAnimationFrame(draw);\n    }\n\n    draw();\n  });\n</script>\n\n<canvas\n  bind:this={canvas}\n  width={boardWidth}\n  height={boardHeight}\n  on:click={handleClick} />\n","<script>\n  import Board from \"../components/Board.svelte\";\n  import { history, status } from \"../stores/store.js\";\n</script>\n\n<style>\n  .game {\n    font: 14px \"Century Gothic\", Futura, sans-serif;\n    margin: 20px;\n    display: flex;\n    flex-direction: row;\n  }\n\n  .game-info {\n    margin-left: 20px;\n  }\n\n  .status {\n    margin-bottom: 10px;\n  }\n\n  ol {\n    padding-left: 30px;\n  }\n</style>\n\n<div class=\"game\">\n  <div class=\"game-board\">\n    <Board />\n  </div>\n  <div class=\"game-info\">\n    <div class=\"status\">\n      {#if $status === 1}\n        <b>Winner: {!$history.currentState().xIsNext ? 'X' : 'O'}</b>\n      {:else if $status === 2}\n        <b>Draw</b>\n      {:else}Next player: {$history.currentState().xIsNext ? 'X' : 'O'}{/if}\n    </div>\n    <div>\n      {#if $history.canUndo()}\n        <button on:click={history.undo}>Undo</button>\n      {:else}\n        <button disabled>Undo</button>\n      {/if}\n      {#if $history.canRedo()}\n        <button on:click={history.redo}>Redo</button>\n      {:else}\n        <button disabled>Redo</button>\n      {/if}\n    </div>\n    <ol>\n      {#each $history.history as value, i}\n        {#if i == 0}\n          <li>\n            <button on:click={() => history.setCurrent(i)}>\n              Go to game start\n            </button>\n          </li>\n        {:else}\n          <li>\n            <button on:click={() => history.setCurrent(i)}>\n              Go to move #{i}\n            </button>\n          </li>\n        {/if}\n      {/each}\n    </ol>\n  </div>\n</div>\n","\n/**\n * @sveltech/routify 1.0.1-56\n * File generated Sat Feb 29 2020 13:37:13 GMT+0200 (Eastern European Standard Time)\n */\n\n//buildRoutes\nimport { buildRoutes } from \"/Users/adrianjager/dev/jig-tac-to/node_modules/@sveltech/routify/runtime/buildRoutes\"\n\n//dynamic imports\nimport _about from '/Users/adrianjager/dev/jig-tac-to/src/pages/about.svelte'\nimport _index from '/Users/adrianjager/dev/jig-tac-to/src/pages/index.svelte'\n\n//keys\nconst keys = [\"isFallback\",\"isIndex\",\"hasParam\",\"path\",\"component\",\"layouts\",\"meta\",\"shortPath\"]\n\n//layouts\nconst layouts = {}\n\n\n//raw routes\nconst _routes = [\n  {\n    \"component\": () => _about,\n    \"meta\": {},\n    \"isIndex\": false,\n    \"isFallback\": false,\n    \"hasParam\": false,\n    \"path\": \"/about\",\n    \"shortPath\": \"/about\",\n    \"layouts\": []\n  },\n  {\n    \"component\": () => _index,\n    \"meta\": {},\n    \"isIndex\": true,\n    \"isFallback\": false,\n    \"hasParam\": false,\n    \"path\": \"/index\",\n    \"shortPath\": \"\",\n    \"layouts\": []\n  }\n]\n\n//options\nexport const options = {\"unknownPropWarnings\":true}\n\n//routes\nexport const routes = buildRoutes(_routes, keys)\n","import App from \"./App.svelte\";\n\nconst app = new App({\n  target: document.body,\n  props: {\n    name: \"world\"\n  }\n});\n\nexport default app;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","current_component","set_current_component","get_current_component","Error","setContext","key","context","set","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","seen_callbacks","Set","length","shift","update","pop","i","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","outro_and_destroy_block","lookup","create_component","mount_component","on_mount","m","new_on_destroy","map","filter","destroy_component","detaching","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","Map","ready","ret","rest","fill","make_dirty","hydrate","l","Array","from","childNodes","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","beforeUrlChange","_hooks","listener","hooks","_isActive","url","route","path","keepIndex","currentPath","re","RegExp","match","_goto","params","_static","shallow","href","get","history","pushState","routes","pages","sourceDir","routifyDir","ignore","unknownPropWarnings","dynamicImports","singleBuild","scroll","extensions","distDir","noPrerender","unusedPropWarnings","MATCH_PARAM","handleScroll","scrollAncestorsToTop","scrollTo","dataset","routify","parentElement","config","hash","window","location","behavior","includes","el","querySelector","scrollIntoView","handleHash","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","deltas","child_ctx","Math","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","scopeToChild","levels","updates","to_null_out","accounted_for","$$scope","undefined","spread_props","action_result","layouts","scoped","Decorator","_passthroughDecorator","propFromParam","scopedSync","_lastLayout","_Component","onComponentLoaded","layout","layoutIsUpdated","remainingLayouts","stopAutoReady","dispatchEvent","CustomEvent","onLastComponentLoaded","preserveIndex","replace","dir","matchingRoute","find","meta","shortPath","entries","_url","$route","$routes","goto","isActive","param","res","setComponent","prevRoute","updatePage","currentUrl","pathname","urlToRoute","prev","routeStore","eventName","async","state","title","Event","toLowerCase","_","hook","Boolean","runHooksBeforeUrlChange","apply","handleClick","e","createEventListeners","closest","ctrlKey","metaKey","altKey","shiftKey","button","defaultPrevented","host","preventDefault","mockUrl","URL","searchParams","regex","paramKeys","arr","split","layoutByPos","fragments","f","getRouteProps","prop","leftover","routesStore","$routesStore","decorateRoute","string","matches","str","substr","pathToParams","recursive","suffix","pathToRegex","isFallback","ranking","startsWith","join","pathToRank","counter","History","current","canRedo","canUndo","h","console","log","undo","redo","setCurrent","createHistory","status","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","derived","$history","currentState","squares","lines","calculateWinner","canvas","width","height","cellWidth","cellHeight","colorStroke","boardWidth","boardHeight","xIsNext","getContext","draw","clearRect","beginPath","x","moveTo","lineTo","y","strokeStyle","stroke","closePath","font","j","fillText","requestAnimationFrame","trunc","offsetX","offsetY","$status","slice","newState","iterations","routeKeys","sort","buildRoutes","_about","isIndex","hasParam","_index","body"],"mappings":"gCAAA,SAASA,KAET,SAASC,EAAOC,EAAKC,GAEjB,IAAK,MAAMC,KAAKD,EACZD,EAAIE,GAAKD,EAAIC,GACjB,OAAOF,EAUX,SAASG,EAAIC,GACT,OAAOA,IAEX,SAASC,IACL,OAAOC,OAAOC,OAAO,MAEzB,SAASC,EAAQC,GACbA,EAAIC,QAAQP,GAEhB,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,EAElB,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,EAUhF,SAASE,EAAUC,KAAUC,GACzB,GAAa,MAATD,EACA,OAAOnB,EAEX,MAAMqB,EAAQF,EAAMD,aAAaE,GACjC,OAAOC,EAAMC,YAAc,IAAMD,EAAMC,cAAgBD,EAO3D,SAASE,EAAoBC,EAAWL,EAAOM,GAC3CD,EAAUE,GAAGC,WAAWC,KAAKV,EAAUC,EAAOM,IAwGlD,SAASI,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,GAEvB,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,MAExC,SAASE,EAAOL,GACZA,EAAKM,WAAWC,YAAYP,GAQhC,SAASQ,EAAQC,GACb,OAAOC,SAASC,cAAcF,GAoBlC,SAASG,EAAKC,GACV,OAAOH,SAASI,eAAeD,GAEnC,SAASE,IACL,OAAOH,EAAK,KAEhB,SAASI,IACL,OAAOJ,EAAK,IAEhB,SAASK,EAAOjB,EAAMkB,EAAOC,EAASC,GAElC,OADApB,EAAKqB,iBAAiBH,EAAOC,EAASC,GAC/B,IAAMpB,EAAKsB,oBAAoBJ,EAAOC,EAASC,GAuB1D,SAASG,EAAKvB,EAAMwB,EAAWC,GACd,MAATA,EACAzB,EAAK0B,gBAAgBF,GAChBxB,EAAK2B,aAAaH,KAAeC,GACtCzB,EAAK4B,aAAaJ,EAAWC,GAyFrC,SAASI,EAASjB,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAKC,OAASA,IACdD,EAAKC,KAAOA,GAuOpB,IAAIiB,EACJ,SAASC,EAAsBtC,GAC3BqC,EAAoBrC,EAExB,SAASuC,IACL,IAAKF,EACD,MAAM,IAAIG,MAAM,oDACpB,OAAOH,EA4BX,SAASI,EAAWC,EAAKC,GACrBJ,IAAwBrC,GAAGyC,QAAQC,IAAIF,EAAKC,GAehD,MAAME,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EACvB,SAASC,IACAD,IACDA,GAAmB,EACnBH,EAAiBK,KAAKC,IAO9B,SAASC,EAAoB1E,GACzBiE,EAAiB3C,KAAKtB,GAK1B,MAAM2E,EAAiB,IAAIC,IAC3B,SAASH,IACL,EAAG,CAGC,KAAOV,EAAiBc,QAAQ,CAC5B,MAAM3D,EAAY6C,EAAiBe,QACnCtB,EAAsBtC,GACtB6D,EAAO7D,EAAUE,IAErB,KAAO4C,EAAkBa,QACrBb,EAAkBgB,KAAlBhB,GAIJ,IAAK,IAAIiB,EAAI,EAAGA,EAAIhB,EAAiBY,OAAQI,GAAK,EAAG,CACjD,MAAM9D,EAAW8C,EAAiBgB,GAC7BN,EAAeO,IAAI/D,KAEpBwD,EAAeQ,IAAIhE,GACnBA,KAGR8C,EAAiBY,OAAS,QACrBd,EAAiBc,QAC1B,KAAOX,EAAgBW,QACnBX,EAAgBc,KAAhBd,GAEJI,GAAmB,EACnBK,EAAeS,QAEnB,SAASL,EAAO3D,GACZ,GAAoB,OAAhBA,EAAGiE,SAAmB,CACtBjE,EAAG2D,SACH3E,EAAQgB,EAAGkE,eACX,MAAMC,EAAQnE,EAAGmE,MACjBnE,EAAGmE,MAAQ,EAAE,GACbnE,EAAGiE,UAAYjE,EAAGiE,SAASG,EAAEpE,EAAGqE,IAAKF,GACrCnE,EAAGsE,aAAapF,QAAQoE,IAiBhC,MAAMiB,EAAW,IAAIf,IACrB,IAAIgB,EACJ,SAASC,IACLD,EAAS,CACLE,EAAG,EACHC,EAAG,GACHP,EAAGI,GAGX,SAASI,IACAJ,EAAOE,GACR1F,EAAQwF,EAAOG,GAEnBH,EAASA,EAAOJ,EAEpB,SAASS,EAAcC,EAAOC,GACtBD,GAASA,EAAMjB,IACfU,EAASS,OAAOF,GAChBA,EAAMjB,EAAEkB,IAGhB,SAASE,EAAeH,EAAOC,EAAOrE,EAAQX,GAC1C,GAAI+E,GAASA,EAAMI,EAAG,CAClB,GAAIX,EAAST,IAAIgB,GACb,OACJP,EAASR,IAAIe,GACbN,EAAOG,EAAEzE,KAAK,KACVqE,EAASS,OAAOF,GACZ/E,IACIW,GACAoE,EAAMK,EAAE,GACZpF,OAGR+E,EAAMI,EAAEH,IA4ShB,SAASK,EAAwBN,EAAOO,GACpCJ,EAAeH,EAAO,EAAG,EAAG,KACxBO,EAAOL,OAAOF,EAAMtC,OAqR5B,SAAS8C,EAAiBR,GACtBA,GAASA,EAAMH,IAKnB,SAASY,EAAgBzF,EAAWM,EAAQI,GACxC,MAAMyD,SAAEA,EAAQuB,SAAEA,EAAQvF,WAAEA,EAAUqE,aAAEA,GAAiBxE,EAAUE,GACnEiE,GAAYA,EAASwB,EAAErF,EAAQI,GAE/B8C,EAAoB,KAChB,MAAMoC,EAAiBF,EAASG,IAAIhH,GAAKiH,OAAOzG,GAC5Cc,EACAA,EAAWC,QAAQwF,GAKnB1G,EAAQ0G,GAEZ5F,EAAUE,GAAGwF,SAAW,KAE5BlB,EAAapF,QAAQoE,GAEzB,SAASuC,EAAkB/F,EAAWgG,GAClC,MAAM9F,EAAKF,EAAUE,GACD,OAAhBA,EAAGiE,WACHjF,EAAQgB,EAAGC,YACXD,EAAGiE,UAAYjE,EAAGiE,SAASkB,EAAEW,GAG7B9F,EAAGC,WAAaD,EAAGiE,SAAW,KAC9BjE,EAAGqE,IAAM,IAWjB,SAAS0B,EAAKjG,EAAW2B,EAASuE,EAAUC,EAAiBC,EAAWC,EAAOhC,EAAQ,EAAE,IACrF,MAAMiC,EAAmBjE,EACzBC,EAAsBtC,GACtB,MAAMuG,EAAc5E,EAAQ0E,OAAS,GAC/BnG,EAAKF,EAAUE,GAAK,CACtBiE,SAAU,KACVI,IAAK,KAEL8B,MAAAA,EACAxC,OAAQrF,EACR4H,UAAAA,EACAI,MAAOzH,IAEP2G,SAAU,GACVvF,WAAY,GACZiE,cAAe,GACfI,aAAc,GACd7B,QAAS,IAAI8D,IAAIH,EAAmBA,EAAiBpG,GAAGyC,QAAU,IAElE/C,UAAWb,IACXsF,MAAAA,GAEJ,IAAIqC,GAAQ,EApjChB,IAAkB3F,EAqjCdb,EAAGqE,IAAM2B,EACHA,EAASlG,EAAWuG,EAAa,CAACxC,EAAG4C,KAAQC,KAC3C,MAAM5E,EAAQ4E,EAAKjD,OAASiD,EAAK,GAAKD,EAOtC,OANIzG,EAAGqE,KAAO6B,EAAUlG,EAAGqE,IAAIR,GAAI7D,EAAGqE,IAAIR,GAAK/B,KACvC9B,EAAGsG,MAAMzC,IACT7D,EAAGsG,MAAMzC,GAAG/B,GACZ0E,GArCpB,SAAoB1G,EAAW+D,IACI,IAA3B/D,EAAUE,GAAGmE,MAAM,KACnBxB,EAAiBzC,KAAKJ,GACtBqD,IACArD,EAAUE,GAAGmE,MAAMwC,KAAK,IAE5B7G,EAAUE,GAAGmE,MAAON,EAAI,GAAM,IAAO,GAAMA,EAAI,GAgC/B+C,CAAW9G,EAAW+D,IAEvB4C,IAET,GACNzG,EAAG2D,SACH6C,GAAQ,EACRxH,EAAQgB,EAAGkE,eAEXlE,EAAGiE,WAAWgC,GAAkBA,EAAgBjG,EAAGqE,KAC/C5C,EAAQrB,SACJqB,EAAQoF,QAER7G,EAAGiE,UAAYjE,EAAGiE,SAAS6C,GAzkCrBjG,EAykCgCY,EAAQrB,OAxkC/C2G,MAAMC,KAAKnG,EAAQoG,cA4kClBjH,EAAGiE,UAAYjE,EAAGiE,SAASU,IAE3BlD,EAAQyF,OACRrC,EAAc/E,EAAUE,GAAGiE,UAC/BsB,EAAgBzF,EAAW2B,EAAQrB,OAAQqB,EAAQjB,QACnD6C,KAEJjB,EAAsBgE,GAsC1B,MAAMe,EACFC,WACIvB,EAAkBwB,KAAM,GACxBA,KAAKC,SAAWhJ,EAEpB8I,IAAIG,EAAMxH,GACN,MAAML,EAAa2H,KAAKrH,GAAGN,UAAU6H,KAAUF,KAAKrH,GAAGN,UAAU6H,GAAQ,IAEzE,OADA7H,EAAUQ,KAAKH,GACR,KACH,MAAMyH,EAAQ9H,EAAU+H,QAAQ1H,IACjB,IAAXyH,GACA9H,EAAUgI,OAAOF,EAAO,IAGpCJ,SCj6CJ,MAAMO,EAAmB,GAgBzB,SAASC,EAAS9F,EAAO+F,EAAQvJ,GAC7B,IAAIwJ,EACJ,MAAMC,EAAc,GACpB,SAASrF,EAAIsF,GACT,GAAI3I,EAAeyC,EAAOkG,KACtBlG,EAAQkG,EACJF,GAAM,CACN,MAAMG,GAAaN,EAAiBlE,OACpC,IAAK,IAAII,EAAI,EAAGA,EAAIkE,EAAYtE,OAAQI,GAAK,EAAG,CAC5C,MAAMqE,EAAIH,EAAYlE,GACtBqE,EAAE,KACFP,EAAiBzH,KAAKgI,EAAGpG,GAE7B,GAAImG,EAAW,CACX,IAAK,IAAIpE,EAAI,EAAGA,EAAI8D,EAAiBlE,OAAQI,GAAK,EAC9C8D,EAAiB9D,GAAG,GAAG8D,EAAiB9D,EAAI,IAEhD8D,EAAiBlE,OAAS,IA0B1C,MAAO,CAAEf,IAAAA,EAAKiB,OArBd,SAAgB/E,GACZ8D,EAAI9D,EAAGkD,KAoBWtC,UAlBtB,SAAmBb,EAAKwJ,EAAa7J,GACjC,MAAM8J,EAAa,CAACzJ,EAAKwJ,GAMzB,OALAJ,EAAY7H,KAAKkI,GACU,IAAvBL,EAAYtE,SACZqE,EAAOD,EAAMnF,IAAQpE,GAEzBK,EAAImD,GACG,KACH,MAAM0F,EAAQO,EAAYN,QAAQW,IACnB,IAAXZ,GACAO,EAAYL,OAAOF,EAAO,GAEH,IAAvBO,EAAYtE,SACZqE,IACAA,EAAO,SCtChB,MAAMO,EAAkB,CAC7BC,OAAQ,GACRlB,UAAUmB,GACR,MAAMC,EAAQnB,KAAKiB,OACbd,EAAQgB,EAAM/E,OAEpB,OADA8E,EAASxI,IAAcyI,EAAMhB,GAASzH,IAC/B,WAAayI,EAAMhB,KAoDvB,SAASiB,EAAUC,EAAKC,GAC7B,OAAO,SAAUC,EAAMC,GAAY,GACjCD,EAAOF,EAAIE,EAAM,KAAMC,GACvB,MAAMC,EAAcJ,EAAIC,EAAMC,KAAM,KAAMC,GACpCE,EAAK,IAAIC,OAAO,IAAMJ,GAC5B,OAAOE,EAAYG,MAAMF,IAItB,SAASG,EAAMR,GACpB,OAAO,SAAcE,EAAMO,EAAQC,EAASC,GAC1C,MAAMC,EAAOZ,EAAIE,EAAMO,GFsf3B,IAAoB3G,EErfX4G,GFqfW5G,EEpfA,oBFqfTH,IAAwBrC,GAAGyC,QAAQ8G,IAAI/G,IErfT8G,EAAMD,GAD7BG,QAAQC,UAAU,GAAI,KAAMH,ICxFvC,MAAMX,EAAQf,EAAS,IACjB8B,EAAS9B,EAAS,UCHhB,CACb+B,MAAS,8CACTC,UAAa,SACbC,WAAc,qCACdC,OAAU,GACVC,qBAAuB,EACvBC,gBAAkB,EAClBC,aAAe,EACfC,QAAU,EACVC,WAAc,CACZ,OACA,SACA,MAEFC,QAAW,OACXC,aAAe,EACfC,oBAAsB,GCfxB,MAAMC,GAAcvB,OAAO,gBAEpB,SAASwB,GAAa3J,IAkBtB,SAAS4J,EAAqB5J,GAC/BA,GAAWA,EAAQ6J,UAAwC,gBAA5B7J,EAAQ8J,QAAQC,UACjD/J,EAAQ6J,SAAS,EAAG,GACpBD,EAAqB5J,EAAQgK,gBApB/BJ,CAAqB5J,GAKhB,WACL,MAAMqJ,OAAEA,GAAWY,EACbrJ,EAAU,CAAC,OAAQ,SAAU,WAC7BsJ,KAAEA,GAASC,OAAOC,SACxB,GAAIf,GAAUa,EAAM,CAClB,MAAMG,EAAWzJ,EAAQ0J,SAASjB,IAAWA,GAAU,OACjDkB,EAAKrK,SAASsK,cAAcN,GAC9BA,GAAQK,GAAIA,EAAGE,eAAe,CAAEJ,SAAAA,KAXtCK,qGC0EQ,cAAalH,4LNs7BvB,SAA2BmH,EAAYrH,EAAOsH,EAASC,EAASrH,EAAKsH,EAAMtG,EAAQhF,EAAMuL,EAASC,EAAmBC,EAAMC,GACvH,IAAI7G,EAAIsG,EAAW/H,OACfuI,EAAIL,EAAKlI,OACTI,EAAIqB,EACR,MAAM+G,EAAc,GACpB,KAAOpI,KACHoI,EAAYT,EAAW3H,GAAGrB,KAAOqB,EACrC,MAAMqI,EAAa,GACbC,EAAa,IAAI5F,IACjB6F,EAAS,IAAI7F,IAEnB,IADA1C,EAAImI,EACGnI,KAAK,CACR,MAAMwI,EAAYN,EAAY1H,EAAKsH,EAAM9H,GACnCrB,EAAMiJ,EAAQY,GACpB,IAAIvH,EAAQO,EAAOkE,IAAI/G,GAClBsC,EAII4G,GACL5G,EAAMV,EAAEiI,EAAWlI,IAJnBW,EAAQ+G,EAAkBrJ,EAAK6J,IACzB1H,IAKVwH,EAAWzJ,IAAIF,EAAK0J,EAAWrI,GAAKiB,GAChCtC,KAAOyJ,GACPG,EAAO1J,IAAIF,EAAK8J,KAAKC,IAAI1I,EAAIoI,EAAYzJ,KAEjD,MAAMgK,EAAY,IAAIhJ,IAChBiJ,EAAW,IAAIjJ,IACrB,SAASjD,EAAOuE,GACZD,EAAcC,EAAO,GACrBA,EAAMW,EAAEpF,EAAMyL,GACdzG,EAAO3C,IAAIoC,EAAMtC,IAAKsC,GACtBgH,EAAOhH,EAAM4H,MACbV,IAEJ,KAAO9G,GAAK8G,GAAG,CACX,MAAMW,EAAYT,EAAWF,EAAI,GAC3BY,EAAYpB,EAAWtG,EAAI,GAC3B2H,EAAUF,EAAUnK,IACpBsK,EAAUF,EAAUpK,IACtBmK,IAAcC,GAEdd,EAAOa,EAAUD,MACjBxH,IACA8G,KAEMG,EAAWrI,IAAIgJ,IAKfzH,EAAOvB,IAAI+I,IAAYL,EAAU1I,IAAI+I,GAC3CtM,EAAOoM,GAEFF,EAAS3I,IAAIgJ,GAClB5H,IAEKkH,EAAO7C,IAAIsD,GAAWT,EAAO7C,IAAIuD,IACtCL,EAAS1I,IAAI8I,GACbtM,EAAOoM,KAGPH,EAAUzI,IAAI+I,GACd5H,MAfA0G,EAAQgB,EAAWvH,GACnBH,KAiBR,KAAOA,KAAK,CACR,MAAM0H,EAAYpB,EAAWtG,GACxBiH,EAAWrI,IAAI8I,EAAUpK,MAC1BoJ,EAAQgB,EAAWvH,GAE3B,KAAO2G,GACHzL,EAAO2L,EAAWF,EAAI,IAC1B,OAAOE,cM//BD,gOAUa7H,qBACmB,IAAdA,MAA4BA,MAAYA,2BACnCA,gBACVA,QAAWA,qGAHXA,qCACmB,IAAdA,MAA4BA,MAAYA,oCACnCA,4BACVA,QAAWA,2HALvBA,KAAiBZ,kFAAjBY,KAAiBZ,4OADlBY,oEAJQ0I,wCAAAA,sRNygClB,SAA2BC,EAAQC,GAC/B,MAAMtJ,EAAS,GACTuJ,EAAc,GACdC,EAAgB,CAAEC,QAAS,GACjC,IAAIvJ,EAAImJ,EAAOvJ,OACf,KAAOI,KAAK,CACR,MAAMqB,EAAI8H,EAAOnJ,GACXmI,EAAIiB,EAAQpJ,GAClB,GAAImI,EAAG,CACH,IAAK,MAAMxJ,KAAO0C,EACR1C,KAAOwJ,IACTkB,EAAY1K,GAAO,GAE3B,IAAK,MAAMA,KAAOwJ,EACTmB,EAAc3K,KACfmB,EAAOnB,GAAOwJ,EAAExJ,GAChB2K,EAAc3K,GAAO,GAG7BwK,EAAOnJ,GAAKmI,OAGZ,IAAK,MAAMxJ,KAAO0C,EACdiI,EAAc3K,GAAO,EAIjC,IAAK,MAAMA,KAAO0K,EACR1K,KAAOmB,IACTA,EAAOnB,QAAO6K,GAEtB,OAAO1J,wDAEgB2J,EMtiCjBjJ,KNuiCyB,iBAAjBiJ,GAA8C,OAAjBA,EAAwBA,EAAe,SADtF,IAA2BA,0XAphC3B,IAA0BC,WAAAA,wBACfA,GAAiBpO,EAAYoO,EAAc3B,SAAW2B,EAAc3B,QAAUtN,gEMNnF+F,6NAAAA,uNAtFFwG,WANS2C,gBACTC,mBACAC,4BACAC,KAIAC,KACApL,EAAM,EACNqL,WAEIpL,EAAUmF,UAkBZkG,EAAaC,EAebjO,iBAdKkO,SACPF,EAAcG,GACVC,OAAiB1L,OACW,IAA5B2L,EAAiB1K,+BNkkBrBN,IACOJ,GMriBPyH,GAAaK,GACRG,OAAOJ,QAAQwD,eAElBC,kBAAkBC,YAAY,eAjCGC,SAC7B7F,EJsDH,SAAcjG,EAASkG,EAAOe,GACnC,OAAO,SAAad,EAAMO,EAAQqF,GAKhC,GAJA5F,EAAOA,GAAQ,KAEV4F,IAAe5F,EAAOA,EAAK6F,QAAQ,SAAU,KAE9C7F,EAAKK,MAAM,YAAa,CAG1B,IAAIyF,EAAMjM,EAAQmG,MAEDA,EAAKK,MAAM,YAAc,IACjC/J,QAAQ,KACfwP,EAAMA,EAAID,QAAQ,eAAgB,MAIpC7F,EAAOA,EAAK6F,QAAQ,WAAY,IAChCC,EAAMA,EAAID,QAAQ,MAAO,IAAM,IAC/B7F,EAAO8F,EAAM9F,OACR,GAAIA,EAAKK,MAAM,YAEf,CAEL,MAAM0F,EAAgBjF,EAAOkF,KAAKjG,GAASA,EAAMkG,KAAK/N,OAAS8H,GAC5D+F,IAAe/F,EAAO+F,EAAcG,WAGzC3F,EAASrK,OAAOP,OAAO,GAAIoK,EAAMQ,OAAQ1G,EAAQ0G,OAAQA,GACzD,IAAK,MAAO3G,EAAKV,KAAUhD,OAAOiQ,QAAQ5F,GACxCP,EAAOA,EAAK6F,YAAYjM,IAAOV,GAEjC,OAAO8G,GItFKoG,CAAKf,EAAQgB,EAAQC,GACjCzM,EAAQC,KACNiG,MAAOsG,EACPrG,KAAMqF,EAAOrF,KACbF,IAAAA,EACAyG,KAAMjG,EAAMR,GACZ0G,SAAU3G,EAAUC,EAAKuG,YA5B7B1M,EAAW,UAAWE,mNAEfiL,QACLF,IACI1N,cAAiB4N,EAAW9E,KAAM4E,EAAQ,GAAG5E,KAAO,kBACnD4E,2BAIHS,KAAWE,GAAoBX,+CAC5BS,GAAUA,EAAOoB,WAAOzB,EAAgBK,EAAOoB,0BACnDnB,GAAmBJ,GAAeA,EAAYlF,OAASqF,EAAOrF,iCAsB3CqF,GAChBC,IAAiBH,EAAaE,EAAOnO,aACrCiO,EAAW3K,KACb2K,EAAW3K,KAAKkM,QACdxP,EAAYwP,OACZzB,MAAkBJ,IAClBO,WAGFlO,EAAYiO,OACZF,MAAkBJ,IAClBO,KAGDuB,CAAatB,iCAlCG7C,OACjBP,EAAgBO,EAAGP,qBAtBjBkC,4HCRN,MAAMzE,OAAEA,IAAWD,EAEZ,SAAStC,GAAK2D,EAAQ3J,GAC3B,IAAIyP,GAAY,EAEhB,SAASC,EAAW/G,EAAKW,GAEvB,MAAMqG,EAAa1E,OAAOC,SAAS0E,SAG7BhH,EAAQiH,GAFdlH,EAAMA,GAAOgH,EAEiBhG,GAGxB8D,EAAU,KAFKnE,GAAWuG,GAAWF,EAAYhG,IAClBf,GACJ6E,QAAS7E,UACnC6G,EAAUK,KACjBlH,EAAMkH,KAAOL,EACbA,EAAY7G,EAGZmH,EAAWpN,IAAIiG,GAGf5I,EAASyN,GAKX,OAOF,SAA8BiC,GAE3B,CAAC,YAAa,gBAAgBvQ,QAAQ6Q,IACrC,MAAMnR,EAAK4K,QAAQuG,GACnBvG,QAAQuG,GAAaC,eAAgBC,EAAOC,EAAOxH,GACjD,MAAMnH,EAAQ,IAAI4O,MAAMJ,EAAUK,eAGlC,GAFAtR,OAAOP,OAAOgD,EAAO,CAAE0O,MAAAA,EAAOC,MAAAA,EAAOxH,IAAAA,UAmC3CsH,eAAuCzO,GACrC,MAAMoH,EPjCR,SAAyBlJ,GACrB,IAAIqC,EAEJ,OADAtC,EAAUC,EAAO4Q,GAAKvO,EAAQuO,EAA9B7Q,GACOsC,EO8BKyH,CAAIuG,GAClB,IAAK,MAAMQ,KAAQhI,GAAO1C,OAAO2K,SAE/B,SAAWD,EAAK/O,EAAOoH,GAAQ,OAAO,EAExC,OAAO,EAvCO6H,CAAwBjP,GAEhC,OADA3C,EAAG6R,MAAMpJ,KAAM,CAAC4I,EAAOC,EAAOxH,IACvB2F,cAAc9M,MAM3BG,iBAAiB,QAASgP,IACvB,CAAC,YAAa,WAAY,gBAAgBxR,QAAQyR,GACjDjP,iBAAiBiP,EAAG,IAAMlB,MA3B9BmB,CAAqBnB,GAEdA,EA6BT,SAASiB,GAAYnP,GACnB,MAAM6J,EAAK7J,EAAMnB,OAAOyQ,QAAQ,KAC1BvH,EAAO8B,GAAMA,EAAGpJ,aAAa,QAGjCT,EAAMuP,SACNvP,EAAMwP,SACNxP,EAAMyP,QACNzP,EAAM0P,UACN1P,EAAM2P,QACN3P,EAAM4P,kBAGH7H,IAAQ8B,EAAGhL,QAAUgL,EAAGgG,OAASnG,SAASmG,OAE/C7P,EAAM8P,iBACN7H,QAAQC,UAAU,GAAI,GAAIH,IAa5B,SAASsG,GAAWlH,EAAKgB,GACvB,MAAM4H,EAAU,IAAKC,IAAItG,UAAWuG,aAAajI,IAAI,cACrDb,EAAM4I,GAAW5I,EAEjB,MAAMC,EAAQe,EAAOkF,KAAKjG,GAASD,EAAIO,MAAMN,EAAM8I,QACnD,IAAK9I,EACH,MAAM,IAAIrG,6CAC+BoG,eAAiBA,qDAG5D,GAAIC,EAAM+I,UAAW,CACnB,MAAMlE,EAkBV,SAAqBA,GACnB,MAAMmE,EAAM,GAIZ,OAHAnE,EAAQtO,QAAQ+O,IACd0D,EAAI1D,EAAOrF,KAAKgJ,MAAM,KAAKhM,OAAO2K,SAAS9M,OAAS,GAAKwK,IAEpD0D,EAvBWE,CAAYlJ,EAAM6E,SAC5BsE,EAAYpJ,EAAIkJ,MAAM,KAAKhM,OAAO2K,UAyB5C,SAAuB7H,GACrB,OAAOA,EACJkJ,MAAM,KACNhM,OAAO2K,SACP5K,IAAIoM,GAAKA,EAAE9I,MAAM,WACjBtD,IAAIoM,GAAKA,GAAKA,EAAE,KA7BEC,CAAcrJ,EAAMC,MAE5B1J,QAAQ,CAAC+S,EAAMpO,KACpBoO,IACFtJ,EAAMQ,OAAO8I,GAAQH,EAAUjO,GAC3B2J,EAAQ3J,GAAI2J,EAAQ3J,GAAGwL,MAAQ,CAAEjI,CAAC6K,GAAOH,EAAUjO,IAClD8E,EAAM0G,MAAQ,CAAEjI,CAAC6K,GAAOH,EAAUjO,OAO7C,OAFA8E,EAAMuJ,SAAWxJ,EAAI+F,QAAQ,IAAIzF,OAAOL,EAAM8I,OAAQ,IAE/C9I,iSC5GPqC,OAAOJ,sBAEIlB,KACXyI,EAAYzP,IAAIgH,OACZ8D,WAEEzN,EAAWuP,OAAQ9B,EAAU8B,gGAChCG,EAAa1J,GAAKqM,EAAcrS,kBAChC0P,kBACAlN,EAAW,oBAAqBkN,mFCJrC,MAAM4C,GAAgB,SAAS1J,GAW7B,OAVAA,EAAM+I,UJwBoBY,CAAAA,IAC1B,MAAMC,EAAUD,EAAOrJ,MAAMsB,IAC7B,GAAIgI,EAAS,OAAOA,EAAQ5M,IAAI6M,GAAOA,EAAIC,OAAO,EAAGD,EAAI/O,OAAS,KI1BhDiP,CAAa/J,EAAMC,MACrCD,EAAM8I,MJemB,EAACe,EAAKG,KAC/B,MAAMC,EAASD,EAAY,GAAK,MAIhC,OADAH,EAAM,KADNA,GADAA,EAAMA,EAAI/D,QAAQ,gBAAiB,UACzBA,QAAQ,WAAY,cACdA,QAAQlE,GAAa,WAAaqI,GInBpCC,CAAYlK,EAAMC,KAAMD,EAAMmK,YAC5CnK,EAAM7H,KAAO6H,EAAMC,KAAKK,MAAM,mBAAmB,GAAGwF,QAAQ,WAAY,IACxE9F,EAAMoK,QJ0BkB,GAAGnK,KAAAA,KACpBA,EACJgJ,MAAM,KAAKhM,OAAO2K,SAClB5K,IAAI6M,GAAgB,cAARA,EAAsB,IAAMA,EAAIQ,WAAW,KAAO,IAAM,KACpEC,KAAK,II9BQC,CAAWvK,GAC3BA,EAAM6E,QAAQ7H,IAAImB,IAChBA,EAAEuI,MAAQ,GACHvI,IAET6B,EAAMQ,OAAS,GAERR,uVCrBHwK,EAAU,oBAYZA,yECVJ,MAAMC,GACJhM,cACEC,KAAKmC,QAAU,IAAIzC,MACnBM,KAAKgM,SAAW,EAGlBjM,eACE,OAAOC,KAAKmC,QAAQnC,KAAKgM,SAG3BjM,KAAK6I,GAEC5I,KAAKiM,WAAWjM,KAAKmC,QAAQ9B,OAAOL,KAAKgM,QAAU,GAGvDhM,KAAKgM,UACLhM,KAAKmC,QAAQtJ,KAAK+P,GAGpB7I,UACE,OAAOC,KAAKgM,QAAU,EAGxBjM,UACE,OAAOC,KAAKgM,QAAUhM,KAAKmC,QAAQ/F,OAAS,EAG9C2D,OACMC,KAAKkM,WAAWlM,KAAKgM,UAG3BjM,OACMC,KAAKiM,WAAWjM,KAAKgM,UAG3BjM,WAAWiM,GACLA,GAAW,GAAKA,EAAUhM,KAAKmC,QAAQ/F,SAAQ4D,KAAKgM,QAAUA,IAiC/D,MAAM7J,GA7Bb,WACE,MAAMhK,UAAEA,EAASkD,IAAEA,EAAGiB,OAAEA,GAAWiE,EAAS,IAAIwL,IAEhD,MAAO,CACL5T,UAAAA,EACAU,KAAM+P,GACJtM,EAAO6P,IACLA,EAAEtT,KAAK+P,GACPwD,QAAQC,IAAIF,GACLA,IAEXG,KAAM,IACJhQ,EAAO6P,IACLA,EAAEG,OACKH,IAEXI,KAAM,IACJjQ,EAAO6P,IACLA,EAAEI,OACKJ,IAEXK,WAAYR,GACV1P,EAAO6P,IACLA,EAAEK,WAAWR,GACNG,KAKQM,GAEVC,GVVb,SAAiBC,EAAQpV,EAAIqV,GACzB,MAAMC,GAAUnN,MAAMoN,QAAQH,GACxBI,EAAeF,EACf,CAACF,GACDA,EACAK,EAAOzV,EAAG6E,OAAS,EACzB,MA5DO,CACHjE,UAAWoI,EA2DCqM,EAAgBvR,IAC5B,IAAI4R,GAAS,EACb,MAAMC,EAAS,GACf,IAAIC,EAAU,EACVC,EAAUnW,EACd,MAAMoW,EAAO,KACT,GAAIF,EACA,OAEJC,IACA,MAAME,EAAS/V,EAAGsV,EAASK,EAAO,GAAKA,EAAQ7R,GAC3C2R,EACA3R,EAAIiS,GAGJF,EAAUtV,EAAYwV,GAAUA,EAASrW,GAG3CsW,EAAgBR,EAAazO,IAAI,CAAClG,EAAOoE,IAAMrE,EAAUC,EAAQqC,IACnEyS,EAAO1Q,GAAK/B,EACZ0S,KAAa,GAAK3Q,GACdyQ,GACAI,KAEL,KACCF,GAAY,GAAK3Q,KAIrB,OAFAyQ,GAAS,EACTI,IACO,WACH1V,EAAQ4V,GACRH,OA1F8BjV,WU+DpBqV,CAAQrL,GAASsL,IACrC,GAAIA,EAASC,eAAgB,CAC3B,GC5EG,SAAyBC,GAC9B,MAAMC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAET,IAAK,IAAIpR,EAAI,EAAGA,EAAIoR,EAAMxR,OAAQI,IAAK,CACrC,MAAOvE,EAAGC,EAAGoF,GAAKsQ,EAAMpR,GACxB,GAAImR,EAAQ1V,IAAM0V,EAAQ1V,KAAO0V,EAAQzV,IAAMyV,EAAQ1V,KAAO0V,EAAQrQ,GACpE,OAAOqQ,EAAQ1V,GAGnB,OAAO,KD2DD4V,CAAgBJ,EAASC,eAAeC,SAAU,OAAO,EACxD,GAAwB,GAApBF,EAASzB,QAAc,OAAO,EAEzC,OAAO,8DEaAhP,mBACCA,8CACEA,0HAnFN8Q,SAPOC,EAAQ,aACRC,EAAS,gBACTC,EAAY,kBACZC,EAAa,mBACbC,EAAc,UACrBC,EAAa,EAAIL,EAAQE,EACzBI,EAAc,EAAIL,EAASE,EAG3BtF,GACF+E,QAASjO,MAAM,GAAGJ,KAAK,IACvBgP,SAAS,GbsiBb,IAAiB/W,SaniBf4K,GAAQtJ,KAAK+P,GbmiBErR,ca/gBPyF,EAAM8Q,EAAOS,WAAW,gBAErBC,IACPxR,EAAIyR,UAAU,EAAG,EAAGL,EAAYC,GAGhCrR,EAAI0R,oBAGKC,EAAI,EAAGA,GAAKP,EAAYO,GAAKV,EACpCjR,EAAI4R,OAAO,GAAMD,EAAG,GACpB3R,EAAI6R,OAAO,GAAMF,EAAGN,WAIbS,EAAI,EAAGA,GAAKT,EAAaS,GAAKZ,EACrClR,EAAI4R,OAAO,EAAG,GAAME,GACpB9R,EAAI6R,OAAOT,EAAY,GAAMU,GAI/B9R,EAAI+R,YAAcZ,EAClBnR,EAAIgS,SAEJhS,EAAIiS,YAGJjS,EAAI0R,YAEJ1R,EAAIkS,KAAO,+BAEP7X,EAAI,UACCmF,EAAI,EAAGA,EAAIwR,EAAQxR,GAAK,UACtB2S,EAAI,EAAGA,EAAIpB,EAAOoB,GAAK,EAC9BnS,EAAIoS,SACF3B,EAASC,eAAeC,QAAQtW,GAChC8X,EAAIlB,EANF,EAMkB,GACnBzR,EAAI,GAAK0R,EAPR,GASJ7W,IAIJ2F,EAAIiS,YAEJI,sBAAsBb,GAGxBA,KbgeAxT,IAAwBrC,GAAGwF,SAAStF,KAAKtB,6MaliBtB2C,OACfyU,EAAI1J,KAAKqK,OAAOpV,EAAMqV,QAAU,IAAOtB,GAEvCzR,EADIyI,KAAKqK,OAAOpV,EAAMsV,QAAU,IAAOtB,GAC/BH,EAAQY,QAEd/F,EAAQ6E,EAASC,kBACR,GAAX+B,GAAgB7G,EAAM+E,QAAQnR,gBAE5BmR,EAAU/E,EAAM+E,QAAQ+B,QAC9B/B,EAAQnR,GAAKoM,EAAM0F,QAAU,IAAM,QAC/BqB,GACOhC,QAAAA,EACTW,SAAU1F,EAAM0F,SAElBnM,GAAQtJ,KAAK8W,uRCEU3S,KAAS0Q,eAAeY,QAAU,IAAM,yFAAxCtR,KAAS0Q,eAAeY,QAAU,IAAM,mKAH9CtR,KAAS0Q,eAAeY,QAAgB,IAAN,kGAAlCtR,KAAS0Q,eAAeY,QAAgB,IAAN,uPAO7BnM,GAAQmK,wPAKRnK,GAAQoK,uhBAOhB,GAALvP,kMApBU,IAAZA,QAEiB,IAAZA,wEAKLA,KAASkP,mFAKTlP,KAASiP,0CAOPjP,KAASmF,6BAAd/F,8vBAAKY,KAASmF,gBAAd/F,+HAAAA,8GdkHR,SAAsBwT,EAAYnR,GAC9B,IAAK,IAAIjC,EAAI,EAAGA,EAAIoT,EAAWxT,OAAQI,GAAK,EACpCoT,EAAWpT,IACXoT,EAAWpT,GAAGsB,EAAEW,4FclHQ0D,GAAQqK,WAAWhQ,MAMnB2F,GAAQqK,WAAWhQ,oECvCvD,MA2Ba6F,GN9CN,SAAqBA,EAAQwN,GAClC,OACExN,EAEG/D,IAAI0M,IACJ8E,KAAK,CAACxS,EAAGP,IAAOO,EAAEoO,SAAW3O,EAAE2O,SAAW,EAAI,GMyC/BqE,CA3BN,CACd,CACEtX,UAAa,IAAMuX,GACnBxI,KAAQ,GACRyI,SAAW,EACXxE,YAAc,EACdyE,UAAY,EACZ3O,KAAQ,SACRkG,UAAa,SACbtB,QAAW,IAEb,CACE1N,UAAa,IAAM0X,GACnB3I,KAAQ,GACRyI,SAAW,EACXxE,YAAc,EACdyE,UAAY,EACZ3O,KAAQ,SACRkG,UAAa,GACbtB,QAAW,4MCtCH,oEAAQ,CAClBpN,OAAQW,SAAS0W,KACjBtR,MAAO,CACLrF,KAAM"}